{
  "stm32 flash and debug": {
      "prefix": "cmake_stm32_flash_debug",
      "body": [
      "#================config options================",
      "set(UPLOAD_TOOL \"${1|jlink,cmsis-dap|}\") #options: jlink, cmsis-dap",
      "set(SWD_JTAG_PORT \"${2|swd,jtag|}\") #options: swd, jtag",
      "set(TARGET_MCU \"${3|stm32f1x,stm32f4x|}\") #options: stm32f1x, stm32f4x, stm32f7x, stm32h7x, and so on",
      "#==============================================",
      "",
      "# 查找必要的工具",
      "find_program(OPENOCD /usr/bin/openocd)",
      "find_program(GDB arm-none-eabi-gdb)",
      "find_program(KILL pkill)  # Linux/macOS",
      "# 对于 Windows 使用 taskkill",
      "if(WIN32)",
      "  find_program(KILL taskkill)",
      "endif()",
      "# Set upload command based on the selected tool",
      "if(UPLOAD_TOOL STREQUAL \"jlink\")",
      "  set(INTERFACE_CFG \"interface/jlink.cfg\")",
      "elseif(UPLOAD_TOOL STREQUAL \"cmsis-dap\")",
      "  set(INTERFACE_CFG \"interface/cmsis-dap.cfg\")",
      "endif()",
      "",
      "add_custom_target(flash",
      "COMMAND \\${OPENOCD} ",
      "  -f \\${INTERFACE_CFG}",
      "  -c \"transport select \\${SWD_JTAG_PORT}\"",
      "  -f target/\\${TARGET_MCU}.cfg",
      "  -c \"program \\${CMAKE_PROJECT_NAME}.elf verify reset exit\"",
      "DEPENDS \\${CMAKE_PROJECT_NAME}.elf  # 依赖目标文件，确保先编译",
      "COMMENT \"Flashing \\${CMAKE_PROJECT_NAME}.elf with OpenOCD\"",
      ")",
      "add_dependencies(flash \\${CMAKE_PROJECT_NAME})",
      "# 自定义目标：启动调试会话",
      "add_custom_target(start_openocd",
      "COMMAND \\${OPENOCD} ",
      "  -f \\${INTERFACE_CFG}",
      "  -c \"transport select swd\" ",
      "  -f target/\\${TARGET_MCU}.cfg",
      "  -c \"gdb_port 3333\" ",
      "  -c \"tcl_port 6667\" ",
      "  -c \"telnet_port 4445\"",
      "  > openocd.log 2>&1 &",
      ")",
      "#================debug stm32 command================",
      "add_custom_target(debug",
      "COMMAND \\${GDB} \\${CMAKE_PROJECT_NAME}.elf",
      "  -ex \"target extended-remote :3333\" ",
      "  -ex \"monitor reset halt\" ",
      "  -ex \"load\" ",
      "  -ex \"break main\" ",
      "  -ex \"continue\" ",
      "  USES_TERMINAL",
      "COMMAND \\${KILL} -f openocd 2> /dev/null",
      "COMMENT \"Closing openocd server..\"",
      ")",
      "add_dependencies(debug start_openocd)"
      ],
      "description": "stm32 flash in CMakeLists"
    }
}
